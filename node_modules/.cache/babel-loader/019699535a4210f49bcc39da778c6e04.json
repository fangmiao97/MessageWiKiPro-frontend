{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/checkbox/style\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/radio/style\";\nimport _Radio from \"antd/es/radio\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport _classCallCheck from \"/Users/tstudio/IdeaProjects/MKfront/messagewiki2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tstudio/IdeaProjects/MKfront/messagewiki2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tstudio/IdeaProjects/MKfront/messagewiki2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tstudio/IdeaProjects/MKfront/messagewiki2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tstudio/IdeaProjects/MKfront/messagewiki2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/tstudio/IdeaProjects/MKfront/messagewiki2/src/login/login.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './login.css';\nimport { Redirect } from 'react-router-dom';\nimport Auth from './auth';\n/**\n * author: Chaoyue\n * login card\n */\n\nvar FormItem = _Form.Item;\n\nvar openErrorNotification = function openErrorNotification(type) {\n  _notification[type]({\n    message: '注册错误',\n    description: '请更换用户名或联系管理员'\n  });\n};\n\nvar openSuccessNotification = function openSuccessNotification(type) {\n  _notification[type]({\n    message: '注册成功',\n    description: '返回登录页'\n  });\n};\n\nvar CollectionCreateForm = _Form.create()(\n/*#__PURE__*/\n//注册表单\nfunction (_React$Component) {\n  _inherits(_class2, _React$Component);\n\n  function _class2() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, _class2);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(_class2)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false,\n      registerLoading: false\n    };\n\n    _this.register = function (username, password, email) {\n      axios.get('http://127.0.0.1:8080/register', {\n        params: {\n          username: encodeURIComponent(username),\n          password: encodeURIComponent(password),\n          email: encodeURIComponent(email)\n        }\n      }).then(function (response) {\n        console.log(\"register response data:\", response.data);\n\n        if (response.data === 0) {\n          openErrorNotification('error');\n        } else {\n          openSuccessNotification('success');\n        }\n\n        console.log(response);\n      }).catch(function (error) {\n        openErrorNotification('error');\n        console.log(error);\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          _message.loading('注册中...', 2.5);\n\n          console.log('Received values of form: ', values); //处理表单内容\n\n          console.log(values.username);\n\n          _this.register(values.username, values.password, values.email);\n        }\n      });\n    };\n\n    _this.handleConfirmBlur = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        confirmDirty: _this.state.confirmDirty || !!value\n      });\n    };\n\n    _this.compareToFirstPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('输入密码不一致');\n      } else {\n        callback();\n      }\n    };\n\n    _this.validateToNextPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    return _this;\n  }\n\n  _createClass(_class2, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          visible = _this$props.visible,\n          onCancel = _this$props.onCancel,\n          onCreate = _this$props.onCreate,\n          form = _this$props.form;\n      var getFieldDecorator = form.getFieldDecorator;\n      return React.createElement(_Modal, {\n        visible: visible,\n        title: \"\\u6CE8\\u518C\",\n        onCancel: onCancel,\n        footer: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        layout: \"vertical\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        label: \"\\u7528\\u6237\\u540D\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, getFieldDecorator('username', {\n        rules: [{\n          required: true,\n          message: '请输入用户名'\n        }]\n      })(React.createElement(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        label: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: '请输入密码'\n        }, {\n          validator: this.validateToNextPassword\n        }]\n      })(React.createElement(_Input, {\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        label: \"\\u8BF7\\u786E\\u8BA4\\u5BC6\\u7801\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, getFieldDecorator('confirm', {\n        rules: [{\n          required: true,\n          message: '请确认输入的密码'\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })(React.createElement(_Input, {\n        type: \"password\",\n        onBlur: this.handleConfirmBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        label: \"\\u8BF7\\u8F93\\u5165\\u90AE\\u7BB1\\u5730\\u5740\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, getFieldDecorator('email', {\n        rules: [{\n          type: 'email',\n          message: '请输入正确邮箱!'\n        }, {\n          required: true,\n          message: '请输入邮箱'\n        }]\n      })(React.createElement(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        className: \"collection-create-form_last-form-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, getFieldDecorator('modifier', {\n        initialValue: 'publicUser'\n      })(React.createElement(_Radio.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(_Radio, {\n        value: \"publicUser\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"\\u666E\\u901A\\u7528\\u6237\"), React.createElement(_Radio, {\n        value: \"adm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"\\u7BA1\\u7406\\u5458\")))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"registerButton\",\n        loading: this.state.registerLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"\\u6CE8\\u518C\"))));\n    }\n  }]);\n\n  return _class2;\n}(React.Component));\n\nvar LoginCard =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(LoginCard, _React$Component2);\n\n  function LoginCard(props) {\n    var _this2;\n\n    _classCallCheck(this, LoginCard);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(LoginCard).call(this, props));\n\n    _this2.handleSubmit = function (e) {\n      //需要改\n      e.preventDefault();\n\n      _this2.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values); //处理登录数据\n\n          var auth;\n        }\n      });\n    };\n\n    _this2.showRegisterModal = function () {\n      //显示注册表单\n      _this2.setState({\n        visible: true\n      });\n    };\n\n    _this2.handleCancel = function () {\n      _this2.setState({\n        visible: false\n      });\n    };\n\n    _this2.handleCreate = function () {\n      var form = _this2.formRef.props.form;\n      form.validateFields(function (err, values) {\n        if (err) {\n          return;\n        }\n\n        console.log('Received values of form: ', values);\n        form.resetFields();\n\n        _this2.setState({\n          visible: false\n        });\n      });\n    };\n\n    _this2.saveFormRef = function (formRef) {\n      _this2.formRef = formRef;\n    };\n\n    _this2.state = {\n      loading: false,\n      visible: false,\n      //注册modal可见性\n      username: '',\n      password: ''\n    };\n    return _this2;\n  }\n\n  _createClass(LoginCard, [{\n    key: \"render\",\n    value: function render() {\n      var form = this.props.form; //这里注意\n\n      var getFieldDecorator = form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        className: \"loginPage\",\n        style: {\n          background: '#fafafa'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(_Card, {\n        className: \"loginCard\",\n        title: \"\\u767B\\u5F55\",\n        style: {\n          width: 450\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        onSubmit: this.handleSubmit,\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, getFieldDecorator('userName', {\n        rules: [{\n          required: true,\n          message: '请输入用户名靴靴'\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }),\n        placeholder: \"\\u7528\\u6237\\u540D\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: '请输入你的密码'\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"\\u5BC6\\u7801\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, getFieldDecorator('remember', {\n        valuePropName: 'checked',\n        initialValue: false\n      })(React.createElement(_Checkbox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"\\u8BB0\\u4F4F\\u6211\")), React.createElement(\"a\", {\n        className: \"login-form-forgot\",\n        href: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"\\u5FD8\\u8BB0\\u5BC6\\u7801\"), React.createElement(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"\\u767B\\u5F55\"), \"Or \", React.createElement(\"a\", {\n        onClick: this.showRegisterModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"\\u5FEB\\u6765\\u6CE8\\u518C\")))), React.createElement(CollectionCreateForm, {\n        wrappedComponentRef: this.saveFormRef,\n        visible: this.state.visible,\n        onCancel: this.handleCancel,\n        onCreate: this.handleCreate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LoginCard;\n}(React.Component);\n\nvar LoginForm = _Form.create()(LoginCard); //这一句一定要加！！！\n\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/tstudio/IdeaProjects/MKfront/messagewiki2/src/login/login.js"],"names":["React","Component","axios","Redirect","Auth","FormItem","Item","openErrorNotification","type","message","description","openSuccessNotification","CollectionCreateForm","create","state","confirmDirty","registerLoading","register","username","password","email","get","params","encodeURIComponent","then","response","console","log","data","catch","error","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","loading","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","visible","onCancel","onCreate","getFieldDecorator","rules","required","validator","initialValue","LoginCard","auth","showRegisterModal","handleCancel","handleCreate","formRef","resetFields","saveFormRef","background","width","color","valuePropName","LoginForm"],"mappings":"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","sourcesContent":["import React,{ Component } from 'react';\nimport axios from 'axios';\nimport { Button, Card, Row, Form, Icon, Input, Checkbox, Modal, Radio, Alert, message, notification } from 'antd';\nimport './login.css';\nimport { Redirect } from 'react-router-dom'\nimport Auth from './auth'\n\n/**\n * author: Chaoyue\n * login card\n */\n\nconst FormItem = Form.Item;\n\nconst openErrorNotification = (type) => {\n    notification[type]({\n        message: '注册错误',\n        description: '请更换用户名或联系管理员',\n    });\n}\n\nconst openSuccessNotification = (type) => {\n    notification[type]({\n        message: '注册成功',\n        description: '返回登录页',\n    });\n}\n\nconst CollectionCreateForm = Form.create()(//注册表单\n    class extends React.Component {\n\n        state = {\n            confirmDirty: false,\n            registerLoading: false,\n        };\n\n        register = (username, password, email) =>{\n            axios.get('http://127.0.0.1:8080/register',{\n                params:{\n                    username: encodeURIComponent(username),\n                    password: encodeURIComponent(password),\n                    email: encodeURIComponent(email)\n                }\n            })\n                .then(function (response) {\n                    console.log(\"register response data:\",response.data);\n                    if (response.data === 0){\n                        openErrorNotification('error')\n                        }else {\n                        openSuccessNotification('success')\n                    }\n                    console.log(response)\n                })\n                .catch(function (error) {\n                    openErrorNotification('error');\n                    console.log(error);\n                })\n        }\n\n        handleSubmit = (e) => {\n            e.preventDefault();\n            this.props.form.validateFieldsAndScroll((err, values) => {\n                if (!err) {\n\n                    message.loading('注册中...', 2.5);\n                    console.log('Received values of form: ', values);//处理表单内容\n                    console.log(values.username)\n                    this.register(values.username, values.password, values.email)\n                }\n            });\n        }\n        handleConfirmBlur = (e) => {\n            const value = e.target.value;\n            this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n        }\n\n        compareToFirstPassword = (rule, value, callback) => {\n            const form = this.props.form;\n            if (value && value !== form.getFieldValue('password')) {\n                callback('输入密码不一致');\n            } else {\n                callback();\n            }\n        }\n\n        validateToNextPassword = (rule, value, callback) => {\n            const form = this.props.form;\n            if (value && this.state.confirmDirty) {\n                form.validateFields(['confirm'], { force: true });\n            }\n            callback();\n        }\n\n\n\n        render() {\n            const { visible, onCancel, onCreate, form } = this.props;\n            const { getFieldDecorator } = form;\n            return (\n                <Modal\n                    visible={visible}\n                    title=\"注册\"\n                    onCancel={onCancel}\n                    footer={null}\n                >\n                    <Form layout=\"vertical\" onSubmit={this.handleSubmit}>\n                        <FormItem label=\"用户名\">\n                            {getFieldDecorator('username', {\n                                rules: [{ required: true, message: '请输入用户名' }],\n                            })(\n                                <Input />\n                            )}\n                        </FormItem>\n                        <FormItem\n                            label=\"请输入密码\"\n                        >\n                            {getFieldDecorator('password', {\n                                rules: [{\n                                    required: true, message: '请输入密码',\n                                }, {\n                                    validator: this.validateToNextPassword,\n                                }],\n                            })(\n                                <Input type=\"password\" />\n                            )}\n                        </FormItem>\n                        <FormItem\n                            label=\"请确认密码\"\n                        >\n                            {getFieldDecorator('confirm', {\n                                rules: [{\n                                    required: true, message: '请确认输入的密码',\n                                }, {\n                                    validator: this.compareToFirstPassword,\n                                }],\n                            })(\n                                <Input type=\"password\" onBlur={this.handleConfirmBlur} />\n                            )}\n                        </FormItem>\n                        <FormItem\n                            label=\"请输入邮箱地址\"\n                        >\n                            {getFieldDecorator('email', {\n                                rules: [{\n                                    type: 'email', message: '请输入正确邮箱!',\n                                }, {\n                                    required: true, message: '请输入邮箱',\n                                }],\n                            })(\n                                <Input />\n                            )}\n                        </FormItem>\n                        <FormItem className=\"collection-create-form_last-form-item\">\n                            {getFieldDecorator('modifier', {\n                                initialValue: 'publicUser',\n                            })(\n                                <Radio.Group>\n                                    <Radio value=\"publicUser\">普通用户</Radio>\n                                    <Radio value=\"adm\">管理员</Radio>\n                                </Radio.Group>\n                            )}\n                        </FormItem>\n                        <FormItem>\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"registerButton\" loading={this.state.registerLoading}>注册</Button>\n                        </FormItem>\n                    </Form>\n                </Modal>\n            );\n        }\n    }\n);\n\nclass LoginCard extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state={\n            loading: false,\n            visible: false,//注册modal可见性\n            username: '',\n            password: ''\n        };\n    }\n\n    handleSubmit = (e) => {//需要改\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);//处理登录数据\n                let auth\n            }\n        });\n    }\n\n    showRegisterModal = () =>{//显示注册表单\n        this.setState({visible: true})\n    }\n\n    handleCancel = () => {\n        this.setState({ visible: false });\n    }\n\n    handleCreate = () => {\n        const form = this.formRef.props.form;\n        form.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n            console.log('Received values of form: ', values);\n            form.resetFields();\n            this.setState({ visible: false });\n        });\n    }\n    saveFormRef = (formRef) => {\n        this.formRef = formRef;\n    }\n\n    render(){\n\n        const { form} = this.props;//这里注意\n        const { getFieldDecorator } = form;\n            return (\n                <div className=\"loginPage\" style={{ background: '#fafafa' }}>\n\n                    <Card className=\"loginCard\" title=\"登录\" style={{ width: 450}} >\n                        <Form onSubmit={this.handleSubmit} className=\"login-form\" >\n                            <FormItem>\n                                {getFieldDecorator('userName', {\n                                    rules:[{ required: true, message: '请输入用户名靴靴'}]\n                                })(\n                                    <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)'}} />} placeholder=\"用户名\"/>\n                                )}\n                            </FormItem>\n                            <FormItem>\n                                {getFieldDecorator('password', {\n                                    rules: [{required: true, message: '请输入你的密码'}],\n                                })(\n                                    <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"密码\" />\n                                )}\n                            </FormItem>\n                            <FormItem>\n                                {getFieldDecorator('remember', {\n                                    valuePropName: 'checked',\n                                    initialValue: false,\n                                })(\n                                    <Checkbox>记住我</Checkbox>\n                                )}\n                                <a className=\"login-form-forgot\" href=\"\">忘记密码</a>\n                                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                                    登录\n                                </Button>\n                                Or <a onClick={this.showRegisterModal}>快来注册</a>\n                            </FormItem>\n                        </Form>\n                    </Card>\n                    <CollectionCreateForm\n                        wrappedComponentRef={this.saveFormRef}\n                        visible={this.state.visible}\n                        onCancel={this.handleCancel}\n                        onCreate={this.handleCreate}\n                    />\n                </div>\n            );\n    }\n}\n\nconst LoginForm = Form.create()(LoginCard);//这一句一定要加！！！\n\nexport default LoginForm;\n\n\n"]},"metadata":{},"sourceType":"module"}