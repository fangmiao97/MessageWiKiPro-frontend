{"ast":null,"code":"import \"antd/es/drawer/style\";\nimport _Drawer from \"antd/es/drawer\";\nimport _classCallCheck from \"/Users/tstudio/IdeaProjects/MKfront/messagewiki2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tstudio/IdeaProjects/MKfront/messagewiki2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tstudio/IdeaProjects/MKfront/messagewiki2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tstudio/IdeaProjects/MKfront/messagewiki2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tstudio/IdeaProjects/MKfront/messagewiki2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tstudio/IdeaProjects/MKfront/messagewiki2/src/TopicInfo.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\n\nvar TopicInfo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TopicInfo, _React$Component);\n\n  function TopicInfo(props) {\n    var _this2;\n\n    _classCallCheck(this, TopicInfo);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(TopicInfo).call(this, props));\n    _this2.state = {\n      topicinfo: [],\n      comments: [],\n      topicid: _this2.props.topicid\n    };\n    return _this2;\n  }\n\n  _createClass(TopicInfo, [{\n    key: \"getTopicInfo\",\n    value: function getTopicInfo(topicid) {\n      var _this = this;\n\n      console.log(\"topicid=\", this.state.topicid);\n      axios.get(\"http://127.0.0.1:8080/getonetopicinfo\", {\n        params: {\n          topicid: topicid\n        }\n      }).then(function (response) {\n        _this.setState({\n          topicinfo: React.Children.toArray(response.data)\n        });\n\n        console.log(response.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"getTopicComments\",\n    value: function getTopicComments(topicid) {\n      var _this = this;\n\n      axios.get(\"http://127.0.0.1:8080/gettopiccomments\", {\n        params: {\n          topicid: topicid\n        }\n      }).then(function (response) {\n        _this.setState({\n          comments: response.data\n        });\n\n        console.log(response.data);\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this3 = this;\n\n      if (this.state.topicid !== nextProps.topicid) {\n        this.setState({\n          topicid: nextProps.topicid\n        }, function () {\n          _this3.getTopicInfo(nextProps.topicid);\n\n          _this3.getTopicComments(nextProps.topicid);\n        });\n        console.log(\"topicinfo=\", this.state.topicinfo);\n        console.log(\"comments:\", this.state.comments);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(_Drawer, {\n        width: 600,\n        placement: \"right\",\n        visible: this.props.topicDrawerVisible,\n        onClose: function onClose() {\n          return _this4.props.closeTopicDrawer(false);\n        },\n        title: this.state.topicid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.state.topicinfo));\n    }\n  }]);\n\n  return TopicInfo;\n}(React.Component);\n\nexport default TopicInfo;","map":{"version":3,"sources":["/Users/tstudio/IdeaProjects/MKfront/messagewiki2/src/TopicInfo.js"],"names":["React","Component","axios","TopicInfo","props","state","topicinfo","comments","topicid","_this","console","log","get","params","then","response","setState","Children","toArray","data","catch","error","nextProps","getTopicInfo","getTopicComments","topicDrawerVisible","closeTopicDrawer"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;IAGMC,S;;;;;AAEF,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAEd,oFAAMA,KAAN;AACA,WAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,QAAQ,EAAC,EAFA;AAGTC,MAAAA,OAAO,EAAC,OAAKJ,KAAL,CAAWI;AAHV,KAAb;AAHc;AAQjB;;;;iCAEYA,O,EAAQ;AAEjB,UAAIC,KAAK,GAAG,IAAZ;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKN,KAAL,CAAWG,OAAnC;AACAN,MAAAA,KAAK,CAACU,GAAN,CAAU,uCAAV,EAAkD;AAC9CC,QAAAA,MAAM,EAAC;AACHL,UAAAA,OAAO,EAAEA;AADN;AADuC,OAAlD,EAIGM,IAJH,CAIQ,UAAUC,QAAV,EAAoB;AAExBN,QAAAA,KAAK,CAACO,QAAN,CAAe;AACXV,UAAAA,SAAS,EAAEN,KAAK,CAACiB,QAAN,CAAeC,OAAf,CAAuBH,QAAQ,CAACI,IAAhC;AADA,SAAf;;AAGAT,QAAAA,OAAO,CAACC,GAAR,CAAYI,QAAQ,CAACI,IAArB;AACH,OAVD,EAUGC,KAVH,CAUS,UAAUC,KAAV,EAAiB;AACtBX,QAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACH,OAZD;AAaH;;;qCAEgBb,O,EAAQ;AAErB,UAAIC,KAAK,GAAG,IAAZ;;AACAP,MAAAA,KAAK,CAACU,GAAN,CAAU,wCAAV,EAAmD;AAC/CC,QAAAA,MAAM,EAAC;AACHL,UAAAA,OAAO,EAAEA;AADN;AADwC,OAAnD,EAIGM,IAJH,CAIQ,UAAUC,QAAV,EAAoB;AACxBN,QAAAA,KAAK,CAACO,QAAN,CAAe;AACXT,UAAAA,QAAQ,EAAEQ,QAAQ,CAACI;AADR,SAAf;;AAGAT,QAAAA,OAAO,CAACC,GAAR,CAAYI,QAAQ,CAACI,IAArB;AACH,OATD;AAUH;;;8CAEyBG,S,EAAU;AAAA;;AAChC,UAAI,KAAKjB,KAAL,CAAWG,OAAX,KAAuBc,SAAS,CAACd,OAArC,EAA6C;AACzC,aAAKQ,QAAL,CAAc;AACVR,UAAAA,OAAO,EAAEc,SAAS,CAACd;AADT,SAAd,EAEE,YAAM;AACJ,UAAA,MAAI,CAACe,YAAL,CAAkBD,SAAS,CAACd,OAA5B;;AACA,UAAA,MAAI,CAACgB,gBAAL,CAAsBF,SAAS,CAACd,OAAhC;AACH,SALD;AAMAE,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKN,KAAL,CAAWC,SAArC;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKN,KAAL,CAAWE,QAApC;AACH;AACJ;;;6BAGY;AAAA;;AAET,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,KAAK,EAAE,GADX;AAEI,QAAA,SAAS,EAAE,OAFf;AAGI,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWqB,kBAHxB;AAII,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACrB,KAAL,CAAWsB,gBAAX,CAA4B,KAA5B,CAAN;AAAA,SAJb;AAKI,QAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWG,OALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOK,KAAKH,KAAL,CAAWC,SAPhB,CADJ,CADJ;AAaH;;;;EA3EmBN,KAAK,CAACC,S;;AA8E9B,eAAeE,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport {Drawer} from 'antd';\nimport axios from \"axios\";\n\n\nclass TopicInfo extends React.Component{\n\n    constructor(props){\n\n        super(props);\n        this.state = {\n            topicinfo: [],\n            comments:[],\n            topicid:this.props.topicid\n        }\n    }\n\n    getTopicInfo(topicid){\n\n        let _this = this;\n        console.log(\"topicid=\", this.state.topicid)\n        axios.get(\"http://127.0.0.1:8080/getonetopicinfo\",{\n            params:{\n                topicid: topicid\n            }\n        }).then(function (response) {\n\n            _this.setState({\n                topicinfo: React.Children.toArray(response.data)\n            });\n            console.log(response.data)\n        }).catch(function (error) {\n            console.log(error)\n        })\n    }\n\n    getTopicComments(topicid){\n\n        let _this = this;\n        axios.get(\"http://127.0.0.1:8080/gettopiccomments\",{\n            params:{\n                topicid: topicid\n            }\n        }).then(function (response) {\n            _this.setState({\n                comments: response.data\n            });\n            console.log(response.data)\n        })\n    }\n\n    componentWillReceiveProps(nextProps){\n        if (this.state.topicid !== nextProps.topicid){\n            this.setState({\n                topicid: nextProps.topicid\n            },() => {\n                this.getTopicInfo(nextProps.topicid);\n                this.getTopicComments(nextProps.topicid)\n            })\n            console.log(\"topicinfo=\", this.state.topicinfo);\n            console.log(\"comments:\", this.state.comments)\n        }\n    }\n\n\n        render() {\n\n        return (\n            <div>\n                <Drawer\n                    width={600}\n                    placement={\"right\"}\n                    visible={this.props.topicDrawerVisible}\n                    onClose={() => this.props.closeTopicDrawer(false)}\n                    title={this.state.topicid}\n                    >\n                    {this.state.topicinfo}\n                </Drawer>\n            </div>\n        );\n    }\n}\n\nexport default TopicInfo;"]},"metadata":{},"sourceType":"module"}