{"ast":null,"code":"import \"antd/es/drawer/style\";\nimport _Drawer from \"antd/es/drawer\";\nimport \"antd/es/list/style\";\nimport _List from \"antd/es/list\";\nimport \"antd/es/avatar/style\";\nimport _Avatar from \"antd/es/avatar\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport _classCallCheck from \"/Users/tstudio/IdeaProjects/MKfront/messagewiki2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tstudio/IdeaProjects/MKfront/messagewiki2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tstudio/IdeaProjects/MKfront/messagewiki2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tstudio/IdeaProjects/MKfront/messagewiki2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tstudio/IdeaProjects/MKfront/messagewiki2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"/Users/tstudio/IdeaProjects/MKfront/messagewiki2/src/TopicInfo.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport './TopicInfo.css';\nvar TextArea = _Input.TextArea;\nvar FormItem = _Form.Item;\n\nvar submitCommentForm = _Form.create()(\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_class2, _React$Component);\n\n  function _class2() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, _class2);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(_class2)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this2.state = {\n      submitButtonLoading: false\n    };\n\n    _this2.submitComment = function (e) {\n      e.preventDefault();\n\n      _this2.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values); //处理表单内容\n\n          console.log(_this2.props.username);\n\n          if (_this2.props.username === \"未登录\") {\n            _message.error(\"请登录！\");\n          } else {\n            _this2.setState({\n              submitButtonLoading: true\n            });\n\n            _this2.submit(_this2.props.topicid, _this2.props.username, values.content, function () {\n              _this2.setState({\n                submitButtonLoading: false\n              });\n            });\n          }\n        }\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(_class2, [{\n    key: \"submit\",\n    value: function submit(topicid, username, content, callback) {\n      axios.get(\"http://127.0.0.1:8080/submitcomment\", {\n        params: {\n          topicid: topicid,\n          username: encodeURIComponent(username),\n          content: encodeURIComponent(content)\n        }\n      }).then(function (response) {\n        if (response.data !== 0) {\n          _message.success(\"留言成功！\");\n\n          callback();\n        } else {\n          _message.error(\"something wrong\");\n\n          callback();\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          editFormVisible = _this$props.editFormVisible,\n          handleCancel = _this$props.handleCancel,\n          handleOk = _this$props.handleOk,\n          form = _this$props.form;\n      var getFieldDecorator = form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        layout: \"vertical\",\n        onSubmit: this.submitComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        label: \"\\u65B0\\u589E\\u7559\\u8A00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, getFieldDecorator(\"content\")(React.createElement(TextArea, {\n        rows: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"submitButton\",\n        loading: this.state.submitButtonLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"\\u53D1\\u5E03\"))));\n    }\n  }]);\n\n  return _class2;\n}(React.Component));\n\nvar TopicInfo =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(TopicInfo, _React$Component2);\n\n  function TopicInfo(props) {\n    var _this3;\n\n    _classCallCheck(this, TopicInfo);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(TopicInfo).call(this, props));\n    _this3.state = {\n      topicinfo: [],\n      comments: [],\n      topicid: _this3.props.topicid,\n      title: \"\"\n    };\n    return _this3;\n  }\n\n  _createClass(TopicInfo, [{\n    key: \"getTopicInfo\",\n    value: function getTopicInfo(topicid) {\n      var _this = this;\n\n      console.log(\"topicid=\", this.state.topicid);\n      axios.get(\"http://127.0.0.1:8080/getonetopicinfo\", {\n        params: {\n          topicid: topicid\n        }\n      }).then(function (response) {\n        _this.setState({\n          topicinfo: response.data,\n          title: response.data.title\n        });\n\n        console.log(response.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"getTopicComments\",\n    value: function getTopicComments(topicid) {\n      var _this = this;\n\n      axios.get(\"http://127.0.0.1:8080/gettopiccomments\", {\n        params: {\n          topicid: topicid\n        }\n      }).then(function (response) {\n        _this.setState({\n          comments: response.data\n        });\n\n        console.log(response.data);\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this4 = this;\n\n      if (this.state.topicid !== nextProps.topicid) {\n        this.setState({\n          topicid: nextProps.topicid\n        }, function () {\n          _this4.getTopicInfo(nextProps.topicid);\n\n          _this4.getTopicComments(nextProps.topicid);\n        });\n        console.log(\"topicinfo=\", this.state.topicinfo);\n        console.log(\"comments:\", this.state.comments);\n      }\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getTopicInfo(this.state.topicid);\n      this.getTopicComments(this.state.topicid);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(_Drawer, {\n        width: 600,\n        placement: \"right\",\n        visible: this.props.topicDrawerVisible,\n        onClose: function onClose() {\n          return _this5.props.closeTopicDrawer(false);\n        },\n        title: \"\\u7559\\u8A00\\u8BE6\\u60C5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(_List, {\n        itemLayout: \"vertical\",\n        dataSource: this.state.comments,\n        renderItem: function renderItem(item) {\n          return React.createElement(_List.Item, {\n            key: item.commentId,\n            extra: React.createElement(_Avatar, {\n              src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 162\n              },\n              __self: this\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            },\n            __self: this\n          }, React.createElement(_List.Item.Meta, {\n            title: item.username,\n            description: item.commentTime,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163\n            },\n            __self: this\n          }), item.content);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(\"submitCommentForm\", {\n        topicid: this.state.topicid,\n        username: this.props.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TopicInfo;\n}(React.Component);\n\nexport default TopicInfo;","map":{"version":3,"sources":["/Users/tstudio/IdeaProjects/MKfront/messagewiki2/src/TopicInfo.js"],"names":["React","Component","axios","TextArea","FormItem","Item","submitCommentForm","create","state","submitButtonLoading","submitComment","e","preventDefault","props","form","validateFieldsAndScroll","err","values","console","log","username","error","setState","submit","topicid","content","callback","get","params","encodeURIComponent","then","response","data","success","catch","editFormVisible","handleCancel","handleOk","getFieldDecorator","TopicInfo","topicinfo","comments","title","_this","nextProps","getTopicInfo","getTopicComments","topicDrawerVisible","closeTopicDrawer","item","commentId","commentTime"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Drawer, List, Avatar, Input, Form, Button,message} from 'antd';\nimport axios from \"axios\";\nimport './TopicInfo.css'\n\nconst { TextArea } = Input;\n\nconst FormItem = Form.Item;\n\nconst submitCommentForm = Form.create()(\n    class extends React.Component {\n\n        state={\n            submitButtonLoading:false\n        }\n\n        submit(topicid, username, content, callback){\n            axios.get(\"http://127.0.0.1:8080/submitcomment\",{\n                params:{\n                    topicid: topicid,\n                    username: encodeURIComponent(username),\n                    content: encodeURIComponent(content)\n                }\n            }).then(function (response) {\n                if (response.data !== 0){\n                    message.success(\"留言成功！\");\n                    callback()\n                } else {\n                    message.error(\"something wrong\");\n                    callback()\n                }\n            }).catch(function (error) {\n                console.log(error)\n            })\n        }\n\n        submitComment = (e) => {\n            e.preventDefault();\n            this.props.form.validateFieldsAndScroll((err, values) => {\n                if (!err) {\n                    console.log('Received values of form: ', values);//处理表单内容\n                    console.log(this.props.username);\n                    if (this.props.username === \"未登录\"){\n                        message.error(\"请登录！\")\n                    }else {\n                        this.setState({submitButtonLoading: true});\n                        this.submit(this.props.topicid, this.props.username, values.content,\n                            () => {\n                                this.setState({\n                                    submitButtonLoading:false\n                                })\n                            })\n                    }\n                }\n            });\n        }\n\n        render() {\n\n            const { editFormVisible, handleCancel, handleOk, form} = this.props;\n            const { getFieldDecorator } = form;\n\n            return (\n                <div>\n                    <Form layout=\"vertical\" onSubmit={this.submitComment}>\n                        <FormItem label=\"新增留言\">\n                            {getFieldDecorator(\"content\")(<TextArea rows={6} />)}\n                        </FormItem>\n                        <FormItem>\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"submitButton\" loading={this.state.submitButtonLoading}>发布</Button>\n                        </FormItem>\n                    </Form>\n                </div>\n            );\n        }\n    }\n)\n\n\nclass TopicInfo extends React.Component{\n\n    constructor(props){\n\n        super(props);\n        this.state = {\n            topicinfo:[],\n            comments:[],\n            topicid:this.props.topicid,\n            title:\"\"\n        }\n    }\n\n    getTopicInfo(topicid){\n\n        let _this = this;\n        console.log(\"topicid=\", this.state.topicid)\n        axios.get(\"http://127.0.0.1:8080/getonetopicinfo\",{\n            params:{\n                topicid: topicid\n            }\n        }).then(function (response) {\n            _this.setState({\n                topicinfo: response.data,\n                title: response.data.title\n            });\n            console.log(response.data)\n        }).catch(function (error) {\n            console.log(error)\n        })\n    }\n\n    getTopicComments(topicid){\n\n        let _this = this;\n        axios.get(\"http://127.0.0.1:8080/gettopiccomments\",{\n            params:{\n                topicid: topicid\n            }\n        }).then(function (response) {\n            _this.setState({\n                comments: response.data\n            });\n            console.log(response.data)\n        })\n    }\n\n    componentWillReceiveProps(nextProps){\n        if (this.state.topicid !== nextProps.topicid){\n            this.setState({\n                topicid: nextProps.topicid\n            },() => {\n                this.getTopicInfo(nextProps.topicid);\n                this.getTopicComments(nextProps.topicid)\n            })\n            console.log(\"topicinfo=\", this.state.topicinfo);\n            console.log(\"comments:\", this.state.comments)\n        }\n    }\n\n    componentWillMount(){\n        this.getTopicInfo(this.state.topicid);\n        this.getTopicComments(this.state.topicid)\n    }\n\n        render() {\n\n        return (\n            <div>\n                <Drawer\n                    width={600}\n                    placement={\"right\"}\n                    visible={this.props.topicDrawerVisible}\n                    onClose={() => this.props.closeTopicDrawer(false)}\n                    title=\"留言详情\"\n                    >\n                    <List\n                        itemLayout=\"vertical\"\n                        dataSource={this.state.comments}\n                        renderItem={item => (\n                            <List.Item\n                                key = {item.commentId}\n                                extra={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}>\n                                <List.Item.Meta\n                                    title={item.username}\n                                    description={item.commentTime}\n                                />\n                                {item.content}\n                            </List.Item>\n                        )\n                        }>\n                    </List>\n                    <submitCommentForm\n                        topicid = {this.state.topicid}\n                        username = {this.props.username}\n                    />\n                </Drawer>\n            </div>\n        );\n    }\n}\n\nexport default TopicInfo;"]},"metadata":{},"sourceType":"module"}