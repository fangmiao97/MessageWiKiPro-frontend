{"ast":null,"code":"import \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport _classCallCheck from \"/Users/tstudio/IdeaProjects/MKfront/messagewiki2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tstudio/IdeaProjects/MKfront/messagewiki2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport axios from 'axios';\n\nvar Auth =\n/*#__PURE__*/\nfunction () {\n  function Auth() {\n    _classCallCheck(this, Auth);\n\n    this.isLogin = false;\n    this.username = null;\n  }\n\n  _createClass(Auth, [{\n    key: \"login\",\n    value: function login(username, password, callback, callback2) {\n      var _this = this;\n\n      axios.get('http://127.0.0.1:8080/loginCertificate', {\n        params: {\n          username: encodeURIComponent(username),\n          password: encodeURIComponent(password)\n        }\n      }).then(function (response) {\n        if (response.data === 200) {\n          _this.isLogin = true;\n          _this.username = username;\n\n          _message.success(\"登录成功！\");\n\n          callback();\n        } else if (response.data === 500) {\n          _message.warning(\"密码错误，请重新输入！\");\n\n          callback2();\n        } else {\n          _message.error(\"用户不存在！请注册\");\n\n          callback2();\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }]);\n\n  return Auth;\n}();\n\nexport { Auth as default };","map":{"version":3,"sources":["/Users/tstudio/IdeaProjects/MKfront/messagewiki2/src/login/auth.js"],"names":["axios","Auth","isLogin","username","password","callback","callback2","_this","get","params","encodeURIComponent","then","response","data","success","warning","error","catch","console","log"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAGqBC,I;;;AAEjB,kBAAa;AAAA;;AACT,SAAKC,OAAL,GAAe,KAAf;AACA,SAAKC,QAAL,GAAgB,IAAhB;AACH;;;;0BAEKA,Q,EAAUC,Q,EAAUC,Q,EAAUC,S,EAAU;AAC1C,UAAIC,KAAK,GAAG,IAAZ;;AACAP,MAAAA,KAAK,CAACQ,GAAN,CAAU,wCAAV,EAAmD;AAC/CC,QAAAA,MAAM,EAAC;AACHN,UAAAA,QAAQ,EAACO,kBAAkB,CAACP,QAAD,CADxB;AAEHC,UAAAA,QAAQ,EAACM,kBAAkB,CAACN,QAAD;AAFxB;AADwC,OAAnD,EAKGO,IALH,CAKQ,UAAUC,QAAV,EAAoB;AACxB,YAAIA,QAAQ,CAACC,IAAT,KAAkB,GAAtB,EAA2B;AACvBN,UAAAA,KAAK,CAACL,OAAN,GAAgB,IAAhB;AACAK,UAAAA,KAAK,CAACJ,QAAN,GAAiBA,QAAjB;;AACA,mBAAQW,OAAR,CAAgB,OAAhB;;AACAT,UAAAA,QAAQ;AACX,SALD,MAKM,IAAIO,QAAQ,CAACC,IAAT,KAAkB,GAAtB,EAA0B;AAC5B,mBAAQE,OAAR,CAAgB,aAAhB;;AACAT,UAAAA,SAAS;AACZ,SAHK,MAGC;AACH,mBAAQU,KAAR,CAAc,WAAd;;AACAV,UAAAA,SAAS;AACZ;AAEJ,OAnBD,EAmBGW,KAnBH,CAmBS,UAAUD,KAAV,EAAiB;AACtBE,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACH,OArBD;AAsBH;;;;;;SA/BgBf,I","sourcesContent":["import axios from 'axios';\nimport {message} from 'antd';\n\nexport default class Auth{\n\n    constructor(){\n        this.isLogin = false;\n        this.username = null;\n    }\n\n    login(username, password, callback, callback2){\n        let _this = this;\n        axios.get('http://127.0.0.1:8080/loginCertificate',{\n            params:{\n                username:encodeURIComponent(username),\n                password:encodeURIComponent(password)\n            }\n        }).then(function (response) {\n            if (response.data === 200) {\n                _this.isLogin = true;\n                _this.username = username;\n                message.success(\"登录成功！\")\n                callback();\n            }else if (response.data === 500){\n                message.warning(\"密码错误，请重新输入！\")\n                callback2();\n            } else {\n                message.error(\"用户不存在！请注册\")\n                callback2();\n            }\n\n        }).catch(function (error) {\n            console.log(error)\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}